'''
输入某二叉树的前序遍历和中序遍历的结果，请重建出该二叉树。假设输入的前序遍历和中序遍历的结果中都不含重复的数字。例如输入前序遍历序列{1,2,4,7,3,5,6,8}和中序遍历序列{4,7,2,1,5,3,8,6}，则重建二叉树并返回。
'''
# -*- coding:utf-8 -*-
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None
class Solution:
    # 返回构造的TreeNode根节点
    '''
    建树的过程是一个递归过程
    '''
    def reConstructBinaryTree(self, pre, tin):
        # write code here
        rootT=self.reBuildTree(pre,tin)
        return rootT
    def reBuildTree(self,pre,tin):
        if not pre or not tin:
            return None
        root=TreeNode(pre.pop(0))
        index=tin.index(root.val)
        left=tin[0:index]
        right=tin[index+1:]
        root.left=self.reBuildTree(pre,left)
        root.right=self.reBuildTree(pre,right)
        return root